%title=手机应用破解

早在PC时代，就有了破解技术，类似汉化、破解注册码、插件，曾经在PC机初期作为很多软件先期小公司积累原始资本的基本手段。
如今在android手机上又面临着同样的状况，有大量用户的软件需求，又有大量的插件需求，应该说是手机的蓝海时代。

=手机应用破解=
工具很多，但大多数情况还需要配合使用。对于hack源码级别的可以通过java源码熟悉大概流程后，使用apktool工具解包打包。
==一揽子方案==
* 使用apktool可以将代码、图片、xml、语言资源一起生成, [http://code.google.com/p/android-apktool apktool]
    
    apktool d c:\.apk c:\
    apktool b c:\

==apk解包==
* 首先apk实际上就是一个压缩包，解压后就是四个文件，包括：

    *.dex<br />
    AndroidManifest.xml<br />
    res <br />
    META-INF包含签名文件<br />
    resouces.arsc资源说明文件<br />

==dex到Java==
* 第一个思路，生成Java源码，[http://code.google.com/p/dex2jar/downloads/list dex2jar], [http://java.decompiler.free.fr/?q=jdgui jdgui]

    dex2jar classes.dex => 生成classes.dex.dex2jar.jar <br />
    通过jd-gui打开classes.dex.dex2jar.jar可以看到源码
    

* 还有一个思路，生成的smali格式文件, [http://code.google.com/p/smali/downloads/list smali]

    baksmali.jar -o classout classes.ex

* 还有第三种思路，生成ddx格式文件[http://sourceforge.net/projects/dedexer/files Dedexer]

    ddx.jar -o -D -r -d <dir> <dex file>

* 第四种 [http://code.google.com/p/smali/downloads/list smali]

    smali.jar F:\tool\weibo -o F:\tool\_classes.dex

==AndroidManifest.xml到txt==
* 该文件通过如下方法解密, [http://code.google.com/p/android4me/downloads/list AXMLPrinter2]

    AXMLPrinter2.jar AndroidManifest.xml > AndoridManifest.txt

==resources.arsc解析==
* 通过[AndroidResEdit]打开resources.arsc文件

==资源文件解析==
* 直接打开\res\drawable进行图片替换

==apk打包==

==apk签名==
* 删除META-INF文件夹中的除MANIFEST.MF外的两个文件
* 使用工具签名新的apk Auto-Sign


==有用的链接==
http://jserv.blogspot.com/2010/05/android.html
http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html
http://code.google.com/p/smali/ 

{{{ class = "brush:bash"
$ cd res
$ for file in */*.xml; do java -jar AXMLPrinter2.jar $file > temp; echo $file; mv temp $file -f; done
}}}
=反破解=
* 核心代码使用so动态库实现，但Java代码依然存在风险
* 在线签名下载，但Java代码依然存在风险
* 代码混淆，反混淆技术很强
* 混合使用




